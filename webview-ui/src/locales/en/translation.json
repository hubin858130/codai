{
	"settings": {
		"title": "Settings",
		"done": "Done",
		"cancel": "Cancel",
		"language": {
			"title": "Language Settings"
		},
		"autocomplete": {
			"title": "Autocomplete Settings",
			"provider": "Provider",
			"apiBase": "Base URL",
			"apiKey": "API Key",
			"model": "Model",
			"enable": "Enable Autocomplete",
			"testing": "Testing...",
			"test": "Test"
		},
		"other": {
			"title": "Other Settings",
			"customInstructions": "Custom Instructions",
			"customInstructionsDesc": "These instructions are added to the end of the system prompt sent with every request.",
			"planActSeparateModels": "Use different models for Plan and Act modes",
			"planActSeparateModelsDesc": "Switching between Plan and Act mode will persist the API and model used in the previous mode. This may be helpful e.g. when using a strong reasoning model to architect a plan for a cheaper coding model to act on.",
			"advancedSettings": "Advanced Settings",
			"debug": "Debug",
			"resetState": "Reset State",
			"resetStateDesc": "This will reset all global state and secret storage in the extension."
		},
		"feedback": {
			"text": "If you have any questions or feedback, feel free to open an issue at",
			"version": "v{{version}}"
		},
		"tabs": {
			"apiConfig": {
				"name": "API Configuration",
				"tooltip": "API Configuration",
				"header": "API Configuration"
			},
			"general": {
				"name": "General",
				"tooltip": "General Settings",
				"header": "General Settings"
			},
			"features": {
				"name": "Features",
				"tooltip": "Feature Settings",
				"header": "Feature Settings"
			},
			"browser": {
				"name": "Browser",
				"tooltip": "Browser Settings",
				"header": "Browser Settings"
			},
			"terminal": {
				"name": "Terminal",
				"tooltip": "Terminal Settings",
				"header": "Terminal Settings"
			},
			"debug": {
				"name": "Debug",
				"tooltip": "Debug Tools",
				"header": "Debug"
			},
			"about": {
				"name": "About",
				"tooltip": "About Codai",
				"header": "About"
			}
		},
		"planMode": "Plan Mode",
		"actMode": "Act Mode",
		"api": {
			"provider": "API Provider",
			"selectModel": "Select a model...",
			"model": "Model",
			"baseUrl": "Base URL",
			"apiKey": "API Key",
			"modelId": "Model ID",
			"customBaseUrl": "Use custom base URL",
			"customVpcEndpoint": "Use custom VPC endpoint",
			"crossRegionInference": "Use cross-region inference",
			"promptCaching": "Use prompt caching",
			"awsCredentials": "AWS Credentials",
			"awsProfile": "AWS Profile",
			"awsAccessKey": "AWS Access Key",
			"awsSecretKey": "AWS Secret Key",
			"awsSessionToken": "AWS Session Token",
			"awsRegion": "AWS Region",
			"selectRegion": "Select a region...",
			"gcpProjectId": "Google Cloud Project ID",
			"gcpRegion": "Google Cloud Region",
			"modelConfig": "Model Configuration",
			"supportsImages": "Supports Images",
			"supportsComputerUse": "Supports Computer Use",
			"enableR1Format": "Enable R1 messages format",
			"contextWindowSize": "Context Window Size",
			"maxOutputTokens": "Max Output Tokens",
			"inputPrice": "Input price",
			"outputPrice": "Output price",
			"temperature": "Temperature",
			"sortProviderRouting": "Sort underlying provider routing",
			"default": "Default",
			"price": "Price",
			"throughput": "Throughput",
			"latency": "Latency",
			"reasoningEffort": "Modify reasoning effort",
			"low": "low",
			"high": "high",
			"complexPrompts": "Codai uses complex prompts and works best with Claude or deepseek-v3 models. Less capable models may not work as expected.",
			"customHeaders": "Custom Headers",
			"addHeader": "Add Header",
			"headerName": "Header name",
			"headerValue": "Header value",
			"remove": "Remove",
			"modelConfiguration": "Model Configuration",
			"supportsBrowserUse": "Supports browser use",
			"inputPricePerMillion": "Input Price / 1M tokens",
			"outputPricePerMillion": "Output Price / 1M tokens",
			"enterApiKey": "Enter API Key...",
			"enterBaseUrl": "Enter base URL...",
			"enterModelId": "Enter Model ID...",
			"getApiKey": "Get {{provider}} API Key",
			"loading": "Loading...",
			"balance": "Balance",
			"keyStoredLocally": "This key is stored locally and only used to make API requests from this extension.",
			"defaultBehaviorDesc": "Default behavior is to load balance requests across providers (like AWS, Google Vertex, Anthropic), prioritizing price while considering provider uptime",
			"priceProviderDesc": "Sort providers by price, prioritizing the lowest cost provider",
			"throughputProviderDesc": "Sort providers by throughput, prioritizing the provider with the highest throughput (may increase cost)",
			"latencyProviderDesc": "Sort providers by response time, prioritizing the provider with the lowest latency",
			"oauthCredentialsPath": "OAuth Credentials Path (optional)",
			"oauthPathPlaceholder": "Default: ~/.gemini/oauth_creds.json",
			"oauthPathDesc": "Path to the OAuth credentials file. Leave empty to use the default location (~/.gemini/oauth_creds.json).",
			"discoveredProjectId": "Discovered Project ID",
			"projectIdAutoDesc": "This project ID was automatically discovered from your OAuth credentials.",
			"geminiCliDesc": "This provider uses OAuth authentication from the Gemini CLI tool and does not require API keys. If you haven't authenticated yet, please run",
			"geminiCliSetup": "Gemini CLI Setup Instructions",
			"importantRequirements": "Important Requirements",
			"geminiCliRequirements": "• First, you need to install the **Gemini CLI tool**\n• Then, run **gemini** in your terminal and make sure you **Log in with Google**\n• Only works with **personal Google accounts** (not Google Workspace accounts)\n• Does not use API keys - authentication is handled via OAuth\n• Requires the Gemini CLI tool to be installed and authenticated first",
			"freeTierAccess": "✓ Free tier access via OAuth authentication",
			"complexPromptsNote": "Note: codai uses complex prompts and works best with Claude models. Less capable models may not work as expected."
		}
	},
	"chat": {
		"addContext": "Add Context",
		"addImages": "Add Images",
		"planMode": "Plan Mode",
		"actMode": "Act Mode",
		"planModeTooltip": "In Plan mode, Codai will gather information to architect a plan",
		"actModeTooltip": "In Act mode, Codai will complete the task immediately",
		"toggleModeHint": "Toggle with {{metaKey}}+Shift+A",
		"send": "Send",
		"placeholder": "Type a message...",
		"welcome": {
			"title": "Hi, I'm Codai",
			"description": "I can do all kinds of tasks thanks to breakthroughs in <1>{{claudeLink}}</1> agentic coding capabilities and access to tools that let me create & edit files, explore complex projects, use a browser, and execute terminal commands <i>(with your permission, of course)</i>. I can even use MCP to create new tools and extend my own capabilities.",
			"claudeLink": "Claude 3.7 Sonnet's",
			"claudeLinkText": "Claude 3.7 Sonnet's",
			"signupText": "Sign up for an account to get started for free, or use an API key that provides access to models like Claude 3.7 Sonnet.",
			"getStarted": "Get Started for Free",
			"useOwnApiKey": "Use your own API key",
			"letsGo": "Let's go!"
		}
	},
	"autoApprove": {
		"title": "Auto-approve",
		"none": "None",
		"description": "Auto-approve allows Codai to perform the following actions without asking for permission. Please use with caution and only enable if you understand the risks.",
		"maxRequests": "Max Requests:",
		"maxRequestsDesc": "Codai will automatically make this many API requests before asking for approval to proceed with the task.",
		"enableNotifications": "Enable Notifications",
		"notificationsDesc": "Receive system notifications when Codai requires approval to proceed or when a task is completed.",
		"actions": {
			"enableAutoApprove": {
				"label": "Enable auto-approve",
				"shortName": "Enable",
				"description": "Toggle the auto-approve feature on or off."
			},
			"readFiles": {
				"label": "Read project files",
				"shortName": "Read Local",
				"description": "Allows Codai to read files within your workspace."
			},
			"readFilesExternally": {
				"label": "Read all files",
				"shortName": "Read (all)",
				"description": "Allows Codai to read any file on your computer."
			},
			"editFiles": {
				"label": "Edit project files",
				"shortName": "Edit",
				"description": "Allows Codai to modify files within your workspace."
			},
			"editFilesExternally": {
				"label": "Edit all files",
				"shortName": "Edit (all)",
				"description": "Allows Codai to modify any file on your computer."
			},
			"executeSafeCommands": {
				"label": "Execute safe commands",
				"shortName": "Safe Commands",
				"description": "Allows Codai to execute of safe terminal commands. If the model determines a command is potentially destructive, it will still require approval."
			},
			"executeAllCommands": {
				"label": "Execute all commands",
				"shortName": "All Commands",
				"description": "Allows Codai to execute all terminal commands. Use at your own risk."
			},
			"useBrowser": {
				"label": "Use the browser",
				"shortName": "Browser",
				"description": "Allows Codai to launch and interact with any website in a browser."
			},
			"useMcp": {
				"label": "Use MCP servers",
				"shortName": "MCP",
				"description": "Allows Codai to use configured MCP servers which may modify filesystem or interact with APIs."
			},
			"enableAll": {
				"label": "Enable all",
				"shortName": "All",
				"description": "Enable all actions."
			},
			"enableNotifications": {
				"label": "Enable notifications",
				"shortName": "Notifications",
				"description": "Receive system notifications when Codai requires approval to proceed or when a task is completed."
			}
		}
	},
	"mcp": {
		"tabs": {
			"marketplace": "Marketplace",
			"addRemote": "Add Remote",
			"installed": "Installed"
		},
		"addServer": {
			"title": "Add a remote MCP server by providing a name and its URL endpoint. Learn more",
			"serverName": "Server Name",
			"serverNamePlaceholder": "mcp-server",
			"serverUrl": "Server URL",
			"serverUrlPlaceholder": "https://example.com/mcp-server",
			"addButton": "Add Server",
			"addingButton": "Adding...",
			"connectingMessage": "Connecting to server... This may take a few seconds.",
			"editConfig": "Edit Configuration",
			"errors": {
				"nameRequired": "Server name is required",
				"urlRequired": "Server URL is required",
				"invalidUrl": "Invalid URL format",
				"failedToAdd": "Failed to add server"
			}
		},
		"installed": {
			"description": "The Model Context Protocol ",
			"modelContextProtocol": "Model Context Protocol",
			"communityMadeServers": "community-made servers",
			"seeDemo": "See a demo here.",
			"configureServers": "Configure MCP Servers",
			"advancedSettings": "Advanced MCP Settings",
			"nomcpServers": "No MCP servers installed",
			"useCommunityMadeServers": "enables communication with locally running MCP servers that provide additional tools and resources to extend Codai's capabilities. You can use",
			"createNewMcpServer": "or ask Codai to create new tools specific to your workflow (e.g., \"add a tool that gets the latest npm docs\")."
		},
		"configuration": {
			"title": "MCP Servers",
			"done": "Done"
		}
	},
	"account": {
		"title": "Account",
		"done": "Done",
		"underConstruction": "Under construction..."
	},
	"CodaiRules": {
		"manageRules": "Manage Codai Rules & Workflows",
		"CodaiRules": "Codai Rules",
		"globalRules": "Global Rules",
		"CodaiWorkflows": "Codai Workflows",
		"workspaceWorkflows": "Workspace Workflows",
		"globalWorkflows": "Global Workflows",
		"workspaceRules": "Workspace Rules",
		"noRulesFound": "No rules found",
		"editRuleFile": "Edit rule file",
		"deleteRuleFile": "Delete rule file",
		"newRuleFile": "New rule file...",
		"createRuleFile": "Create rule file",
		"newRuleFileButton": "New rule file",
		"ruleNamePlaceholder": "rule-name (.md, .txt, or no extension)",
		"invalidExtension": "Only .md, .txt, or no file extension allowed",
		"ruleDescription": "Rules allow you to provide Codai with system-level guidance. Think of them as a persistent way to include context and preferences for your projects or globally for every conversation.",
		"createWorkflowFile": "New workflow file",
		"newWorkflowFile": "New workflow file...",
		"workflowNamePlaceholder": "workflow-name (.md, .txt, or no extension)",
		"noWorkflowsFound": "No rules found",
		"workflowsDescription": "Workflows allow you to define a series of steps to guide Codai through a repetitive set of tasks, such as deploying a service or submitting a PR. To invoke a workflow, type /workflow-name in the chat."
	}
}
